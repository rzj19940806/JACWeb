@{
    ViewBag.Title = "工位基础信息表";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}
<!--MQTT-->
<script src="~/Content/Scripts/mqtt/mqttws31.min.js"></script>
<script type="text/javascript">
    $(function () {
        CellItem_AviCatg('WcTyp');//需在GetGrid()之前进行初始化赋值
        GetTree();
        GetGrid();
        BindDropItem("#WcTyp", "WcTyp", "==全部==");

        guid = uuid();
        MqttConnect();      //连接Mqtt
    })
    let area_key = '';
    let area_name = '';
    let Type = '';
    var selectnodeishaschild = "";//选中树节点是否有子节点
    var parentId = "";//父节点编号
    var itemsort = "";

    var PlineTypeCellItem = "";
    var guid = "";//唯一标识
    //1.5mqtt实例
    var client;
    var topic1;
    var topic2;
    //加载左边树
    function GetTree() {
        var itemtree = {
            onnodeclick: function (item) {
                selectnodeishaschild = item.hasChildren;
                area_key = item.id;            //ID
                area_name = item.text;         //名称
                Type = item.Type;
                parentId = item.parentnodes;   //父节点编号
                itemsort = item.Type;

                var WcCd = $("#WcCd").val();
                var WcNm = $("#WcNm").val();
                var WcTyp = $("#WcTyp").val();
                //2.点击树展示表格
                $("#gridTable").jqGrid('setGridParam', { url: "@Url.Content("~/BaseModule/BBdbR_WcBase/GridListJson")?area_key=" + area_key + "&&parentId=" + parentId + "&&sort=" + itemsort + "&&WcCd=" + WcCd + "&&WcNm=" + WcNm + "&&WcTyp=" + WcTyp, datatype: 'json' }).trigger('reloadGrid');
    },
    url: "@Url.Content("~/BaseModule/BBdbR_WcBase/TreeJson")"    //1.获取树
    };
    $("#ItemsTree").treeview(itemtree);
    }
    //加载表格
    function GetGrid() {
        $("#gridTable").jqGrid({
            //url: "@Url.Content("~/BaseModule/BBdbR_WcBase/GridListJson")?area_key=''&&parentId=''&&item=''",
            url: "@Url.Content("~/BaseModule/BBdbR_WcBase/GridListJson")?area_key=" + "" + "&&parentId=" + "" + "&&sort=" + "" + "&&WcCd=" + "" + "&&WcNm=" + "" + "&&WcTyp=" + "",
        datatype: "json",
        height: $(window).height() - 149,
        autowidth: true,
        colModel: [
                { label: '工位主键', name: 'WcId', index: 'WcId', width: 0, align: 'left', sortable: true, hidden: true},
                { label: '产线主键', name: 'PlineId', index: 'PlineId', width: 0, align: 'left', sortable: true, hidden: true  },
                { label: '工位编号', name: 'WcCd', index: 'WcCd', width: 80, align: 'center',sortable: true  },
                { label: '工位名称', name: 'WcNm', index: 'WcNm', width: 80, align: 'center',sortable: true  },
                {
                    label: '工位类型', name: 'WcTyp', index: 'WcTyp', width: 80, align: 'center', sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        return CellItem('WcTyp', cellvalue);
                    }
                },
                { label: '产线编号', name: 'PlineCd', index: 'PlineCd', width: 80, align: 'center', sortable: true },
                { label: '产线名称', name: 'PlineNm', index: 'PlineNm', width: 80, align: 'center', sortable: true },
                { label: '工位顺序', name: 'WcQueue', index: 'WcQueue', width: 80, align: 'center', sortable: true, hidden: true },
                { label: '顺序号', name: 'Sort', index: 'Sort', width: 80, align: 'center', sortable: true },
                { label: '工位长度', name: 'WcLength', index: 'WcLength', width: 80, align: 'center', sortable: true, hidden: true },
                { label: '开始', name: 'StartPoint', index: 'StartPoint', width: 80, align: 'center', sortable: true},
                { label: '预警', name: 'PreAlarmPoint', index: 'PreAlarmPoint', width: 80, align: 'center', sortable: true },
                { label: '停线', name: 'StopPoint', index: 'StopPoint', width: 80, align: 'center', sortable: true },
                { label: '结束', name: 'EndPoint', index: 'EndPoint', width: 80, align: 'center', sortable: true  },
                { label: '排序号', name: 'SeqPoint', index: 'Seq', width: 0, align: 'center', sortable: true, hidden: true  },
                { label: '工位描述', name: 'Dsc', index: 'Dsc', width: 0, align: 'center', sortable: true },
                { label: 'Pass次数', name: 'Seq', index: 'Seq', width: 80, align: 'center', sortable: true },
                {
                    label: '是否允许强制录入', name: 'RsvFld1', index: 'RsvFld1', width: 100, align: 'center', 
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == '1') return "允许";
                        else if (cellvalue == '0') return "不允许";
                        else { return "不允许";}
                    }
                },
                { label: '版本号', name: 'VersionNumber', index: 'VersionNumber', width: 0, align: 'center', sortable: true, hidden: true  },

                {
                    label: '有效性', name: 'Enabled', index: 'Enabled', width: 60, align: 'center', hidden: true ,
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == '1') return "<img src='../../Content/Images/checkokmark.gif'/>";
                        if (cellvalue == '0') return "<img src='../../Content/Images/checknomark.gif'/>";
                    }
                },
            { label: '创建时间', name: 'CreTm', index: 'CreTm', width: 150, align: 'center', sortable: true, formatter: 'date', formatoptions: { srcformat: 'Y-m-d H:i:s', newformat: 'Y-m-d H:i:s' }  },
               //{ label: '创建人编号', name: 'CreCd', index: 'CreCd', width: 0, align: 'center', sortable: true  },
               { label: '创建人名称', name: 'CreNm', index: 'CreNm', width: 80, align: 'center', sortable: true  },
            { label: '修改时间', name: 'MdfTm', index: 'MdfTm', width: 150, align: 'center', sortable: true, formatter: 'date', formatoptions: { srcformat: 'Y-m-d H:i:s', newformat: 'Y-m-d H:i:s' }   },
               //{ label: '修改人编号', name: 'MdfCd', index: 'MdfCd', width: 0, align: 'center', sortable: true  },
               { label: '修改人名称', name: 'MdfNm', index: 'MdfNm', width: 0, align: 'center', sortable: true  },
               { label: '备注', name: 'Rem', index: 'Rem', width: 0, align: 'center',sortable: true  },
                //{ label: '预留字段1', name: 'RsvFld1', index: 'RsvFld1', width: 0, align: 'left', sortable: true, hidden: true  },
                { label: '预留字段2', name: 'RsvFld2', index: 'RsvFld2', width: 0, align: 'left', sortable: true, hidden: true  },
        ],
            rowNum: 50,
            pager: "#gridPager",
            sortname: 'sort',
            sortorder: 'asc',
            multiselect: true,
            multiboxonly: true,
            gridview: true,
            rownumbers: true,//启用记录条数
            rowList: [200, 100, 500, 1000],//记录条数列表
            viewrecords: true,//显示总的记录条数
            rownumWidth: 45,//序号列宽
            shrinkToFit: false,//列宽自适应
            loadonce: true,//排序
        //iewrecords: true,//是否显示行数
        //onSelectRow: function () {
        //        SelectRowIndx = GetJqGridRowIndx("#" + this.id);
        //    },
        //    gridComplete: function () {
        //        $("#" + this.id).jqGrid('setSelection', SelectRowIndx);
        //    }
    });
}

    //刷新
    function windowload() {
        $("#gridTable").setGridParam({ datatype: 'json', page: 1 }).trigger("reloadGrid");
    }

    //新增按钮
    function btn_add() {
        if (Type == 2) {
            var url = "/BaseModule/BBdbR_WcBase/Form?area_key=" + area_key
            openDialog(url, "Form", "新增工位信息", 500, 300, function (iframe) {
                top.frames[iframe].AcceptClick()
            });
        }
        else {
            alertDialog("请选择左边产线", 0);
        }
    }
    //编辑按钮
    function btn_edit() {
        var KeyValue = GetJqGridRowValue("#gridTable", "WcId");
        if (KeyValue == undefined || KeyValue == "" || KeyValue == 'null' || KeyValue == 'undefined') {
            tipDialog('您没有选中任何项,请您选中后再操作。', 4, 'warning');
        }
        else {
            var count = KeyValue.split(",").length;
            if (count >= 2) {
                tipDialog('很抱歉，一次只能选择一个进行操作。', 4, 'warning');
            }
            else {
                var url = "/BaseModule/BBdbR_WcBase/Form?KeyValue=" + KeyValue + "&area_key=" + area_key;
                openDialog(url, "Form", "编辑工位信息", 500, 300, function (iframe) {
                    top.frames[iframe].AcceptClick()
                });
            }
        }
    }

    //删除
    function btn_delete() {
        var KeyValue = GetJqGridRowValue("#gridTable", "WcId");
        if (IsDelData(KeyValue)) {
            var delparm = 'KeyValue=' + KeyValue;
            delConfig('/BaseModule/BBdbR_WcBase/DeleteWc', delparm, KeyValue.split(",").length);
        }
    }

    //修改后导出
    //根据检索条件搜索出来的数据直接导出
    function btn_derive() {
        var WcCd = $("#WcCd").val();
        var WcNm = $("#WcNm").val();
        var WcTyp = $("#WcTyp").val();

        var count = $("#gridTable").getGridParam("records");
        if (count == 0) {
            tipDialog("没有要导出的信息！", 1.5, 0);
            return;
        }
        else if (count > 50000) {
            tipDialog("导出数据过大，请选择搜索条件分批导出", 1.5, 0);
            return;
        }
        else {
            window.setTimeout(function () {
                location.href = "/BaseModule/BBdbR_WcBase/GetExcel_Data?area_key=" + escape(area_key) + "&&parentId=" + parentId + "&&sort=" + itemsort + "&&WcCd=" + WcCd + "&&WcNm=" + WcNm + "&&WcTyp=" + WcTyp;
                Loading(false);
            }, 200);
        }
    }



    // 导入
    function btn_import() {
        if (Type == 2) {
            var OrderID = GetJqGridRowValue("#gridTable", "WcId");
            openDialog("/BaseModule/BBdbR_WcBase/ExcelImportDialog?area_key=" + area_key, "ExcelImportDialog", "工位信息导入", 750, 300, function (iframe) {
                top.frames[iframe].AcceptClick();
            });
        }
        else {
            alertDialog("请选择左边产线信息", 0);
        }
    }

    //搜索
    function btn_Search() {
        var WcCd = $("#WcCd").val();
        var WcNm = $("#WcNm").val();
        var WcTyp = $("#WcTyp").val();

        $("#gridTable").jqGrid('setGridParam', {
            url: "@Url.Content("~/BaseModule/BBdbR_WcBase/GridPageByCondition")?area_key=" + escape(area_key) + "&&parentId=" + parentId + "&&sort=" + itemsort + "&&WcCd=" + WcCd + "&&WcNm=" + WcNm + "&&WcTyp=" + WcTyp, page: 1, datatype: 'json'
    }).trigger('reloadGrid');
    }
    $(document).keypress(function (e) {
        // 回车键事件
        if (e.which == 13) {
            btn_Search();
        }
    });

    //根据数据字典显示内容
    function CellItem(Code, cellvalue) {
        var value = "";
        getAjax('/CommonModule/DataDictionary/BinDingItemsJson', { Code: Code }, function (data) {
            var itemjson = eval("(" + data + ")");
            $.each(itemjson, function (i) {
                if (itemjson[i].Code == cellvalue) {
                    value = itemjson[i].FullName;
                }
            });
        })
        return value;
    }

    //根据数据字典显示内容
    function CellItem_AviCatg(Code) {
        var value = "";
        getAjax('/CommonModule/DataDictionary/BinDingItemsJson', { Code: Code }, function (data) {
            var itemjson = eval("(" + data + ")");
            var length = itemjson.length;
            if (length == 1) {
                PlineTypeCellItem = itemjson[0].Code + ":" + itemjson[0].FullName;
            }
            else if (length > 1) {
                for (var a = 0; a < length - 1; a++) {
                    value += itemjson[a].Code + ":" + itemjson[a].FullName + ";";
                }
                PlineTypeCellItem = value + itemjson[length - 1].Code + ":" + itemjson[length - 1].FullName;
            }
        })
    }

    //2.5连接Mqtt
    function MqttConnect() {
        client = new Paho.MQTT.Client("10.138.13.3", 8083, "/FAS/BBdbR_WcBase/" + guid);//建立客户端实例
        client.connect({
            userName: "userName",
            password: "password",
            onSuccess: onConnect,
            onFailure: onFailConnect
        });//连接服务器并注册连接成功处理事件
        //client.onConnectionLost = onConnectionLost;//注册连接断开处理事件
        //client.onMessageArrived = onMessageArrived;//注册消息接收处理事件
        //client.onMessageDelivered = onMessageDelivered;//注册消息发布事件
    }

    //4.1连接成功回调
    function onConnect() {
        //console.log("onConnect");
        topic1 = '/FAS/FitEnCode/UpdateWc'; //发送工位修改消息

    }
    //4.2连接失败回调
    function onFailConnect() {
        tipDialog("消息队列连接失败", 3, -1);
    }
    //4.3连接断开回调
    function onConnectionLost(requestObject) {
        //if (requestObject.errorCode !== 0) {
        //    //console.log("第" + ++ReconnectionNumber + "次重连。异常信息为：" + requestObject.errorMessage);
        //    // 定时器重连
        //    disconnect();
        //    MqttConnect();
        //}
    }
    //发送产线ID
    function changevalue(PlineID) {
        var sendinfo = PlineID;
        let message = new Paho.MQTT.Message(sendinfo);//发送的内容
        message.destinationName = topic1;//发送的主题
        client.send(message);
    }
    //生成唯一标识
    function uuid() {
        var s = [];
        var hexDigits = "0123456789abcdef";
        for (var i = 0; i < 36; i++) {
            s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
        }
        s[14] = "4";  // bits 12-15 of the time_hi_and_version field to 0010
        s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01
        s[8] = s[13] = s[18] = s[23] = "-";

        var uuid = s.join("");
        return uuid;
    }
</script>
<div id="layout" class="layout">
    @*树区域*@
    <div class="layoutPanel layout-west">
        <div class="btnbartitle">
            <div>
                产线索引
            </div>
        </div>
        <div class="ScrollBar" id="ItemsTree"></div>
    </div>
    <div class="layoutPanel layout-center">
        @*按钮区域*@
        <div class="tools_bar" style="margin-top: 1px; margin-bottom: 0px;">
            <div class="PartialButton">
                @Html.Partial("_PartialButton")
            </div>
        </div>
        @*搜索框区域*@
        <table border="0" class="form-find" style="height: 45px;">
            <tr>
                <th>工位编号：</th>
                <td>
                    <input id="WcCd" type="text" class="txt" style="width: 120px" />
                </td>

                <th>工位名称：</th>
                <td>
                    <input id="WcNm" type="text" class="txt" style="width: 120px" />
                </td>

                <th>工位类型：</th>
                <td>
                    <select id="WcTyp" style="width: 150px;height:25px"></select>
                </td>
                <td>
                    <input id="btnSearch" type="button" class="btnSearch" value="搜 索" onclick="btn_Search()" />
                </td>
            </tr>
        </table>
        @*</div>*@
        @*表格区域*@
        <div class="topline rightline" style="margin: 1px; margin-top: -1px;">
            <table id="gridTable"></table>
            <div id="gridPager"></div>
        </div>
    </div>
</div>
