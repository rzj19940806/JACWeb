@{
    ViewBag.Title = "工厂日历信息表";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}
<script type="text/javascript">
    $(function () {
        //CellItem_ClassType('ClassType');//需在GetGrid()之前进行初始化赋值
        //BindDropItem("#ClassTyp", "ClassTyp", "==全部==");
        GetTree();
        GetGrid();
        
    })

    var area_key, area_name = "";
    var selectnodeishaschild = "";//选中树节点是否有子节点
    var parentId = "";//父节点编号
    var ClassTypeCellItem = "";
    let Type = '';

    //加载左边树
    function GetTree() {
        var itemtree = {
            onnodeclick: function (item) {
                selectnodeishaschild = item.hasChildren;
                area_key = item.id;            //ID(年+月)
                area_name = item.text;         //名称(月)
                parentId = item.parentnodes;   //父节点编号(年)
                Type = item.Type;
                var RsvFld1 = $("#RsvFld1").val();
                var RsvFld2 = $("#RsvFld2").val();
                var DtTyp = $("#DtTyp").val();
                //2.点击树展示表格
                $("#gridTable").jqGrid('setGridParam', { url: "@Url.Content("~/BaseModule/BPdb_Dt/GridListJson")?areaId=" + area_name + "&parentId=" + parentId + "&RsvFld1=" + RsvFld1 + "&RsvFld2=" + RsvFld2 + "&DtTyp=" + DtTyp, datatype: 'json'}).trigger('reloadGrid');
    },
    url: "@Url.Content("~/BaseModule/BPdb_Dt/TreeJson")"    //1.获取树
    };
    $("#ItemsTree").treeview(itemtree);
    }
    //加载表格
    function GetGrid() {
        $("#gridTable").jqGrid({
        url: "@Url.Content("~/BaseModule/BPdb_Dt/GridListJson")",
        datatype: "json",
            height: $(window).height() - 149,
        autowidth: true,
        colModel: [
                { label: '主键', name: 'DtId', index: 'DtId', width: 0, align: 'center', sortable: true, hidden: true },
                { label: '机构id', name: 'OrgId', index: 'OrgId', width: 0, align: 'center', sortable: true, hidden: true },
                { label: '班制id', name: 'ClassId', index: 'ClassId', width: 0, align: 'center', sortable: true, hidden: true },
                {
                    label: '机构级别', name: 'OrgRank', index: 'OrgRank', width: 75, align: 'center', sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == '1') return "车间";
                        if (cellvalue == '2') return "产线";
                    }
                },
            { label: '机构名称', name: 'RsvFld1', index: 'RsvFld1', width: 75, align: 'center', sortable: true },
                {
                    label: '班制名称', name: 'RsvFld2', index: 'RsvFld2', width: 100, align: 'center', sortable: true,
                },
                {
                    label: '日期', name: 'Tm', index: 'Tm', width: 100, align: 'center', sortable: true, 
                    formatter: function (cellvalue, options, rowObject) {
                        return formatDate(cellvalue, 'yyyy-MM-dd');
                    }
            },
            { label: '工作时间(h)', name: 'WorkTime', index: 'WorkTime', width: 75, align: 'center', sortable: true },
            { label: '早上开始', name: 'MorningStrTm', index: 'MorningStrTm', width: 75, align: 'center', sortable: true },
            { label: '早上结束', name: 'MorningEndTm', index: 'MorningEndTm', width: 75, align: 'center', sortable: true },
            { label: '下午开始', name: 'AfternoonStrTm', index: 'AfternoonStrTm', width: 75, align: 'center', sortable: true },
            { label: '下午结束', name: 'AfternoonEndTm', index: 'AfternoonEndTm', width: 75, align: 'center', sortable: true },
            { label: '晚上开始', name: 'NightStrTm', index: 'NightStrTm', width: 75, align: 'center', sortable: true },
            { label: '晚上结束', name: 'NightEndTm', index: 'NightEndTm', width: 75, align: 'center', sortable: true },
                {
                    label: '日期类型', name: 'DtTyp', index: 'DtTyp', width: 75, align: 'center', sortable: true,
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == '1') return "工作";
                        if (cellvalue == '0') return "休息";
                    }
                },

            {
                label: '有效性', name: 'Enabled', index: 'Enabled', width: 50, align: 'center', sortable: true, hidden: true,
                    formatter: function (cellvalue, options, rowObject) {
                        if (cellvalue == '1') return "<img src='../../Content/Images/checkokmark.gif'/>";
                        if (cellvalue == '0') return "<img src='../../Content/Images/checknomark.gif'/>";
                    }
                },
            { label: '创建人编号', name: 'CreCd', index: 'CreCd', width: 100, align: 'center', sortable: true, hidden: true },
            { label: '创建人名称', name: 'CreNm', index: 'CreNm', width: 100, align: 'center', sortable: true },
            { label: '创建时间', name: 'CreTm', index: 'CreTm', width: 150, align: 'center', sortable: true },
            { label: '修改人编号', name: 'MdfCd', index: 'MdfCd', width: 0, align: 'center', sortable: true, hidden: true },
            { label: '修改人名称', name: 'MdfNm', index: 'MdfNm', width: 100, align: 'center', sortable: true },
            { label: '修改时间', name: 'MdfTm', index: 'MdfTm', width: 150, align: 'center', sortable: true },
            { label: '备注', name: 'Rem', index: 'Rem', width: 200, align: 'center', sortable: true },
        ],
            rowNum: 50,
            rowList: [50, 100, 500, 1000],
            pager: "#gridPager",
            sortname: 'Tm',
            sortorder: 'desc',
            multiselect: true,
            multiboxonly: true,
            shrinkToFit: false,
            gridview: true,
            rownumbers: true,//启用记录条数
            viewrecords: true,//显示总的记录条数
            rownumWidth: 45,//序号列宽
            shrinkToFit: false,//列宽自适应
            loadonce: true,//排序
    });
    }

    //刷新
    function windowload() {
        $("#gridTable").setGridParam({ datatype: 'json', page: 1 }).trigger("reloadGrid");
        GetTree();//重新加载树
    }


    //新增按钮
    function btn_add() {
        var url = "/BaseModule/BPdb_Dt/Form"
        openDialog(url, "Form", "新增日历信息", 500, 300, function (iframe) {
            top.frames[iframe].AcceptClick()
        });
    }

    //编辑按钮
    function btn_edit() {
        var KeyValue = GetJqGridRowValue("#gridTable", "DtId"); //主键
        var Tm = GetJqGridRowValue("#gridTable", "Tm");  // 日期
        if (KeyValue == undefined || KeyValue == "" || KeyValue == 'null' || KeyValue == 'undefined') {
            tipDialog('您没有选中任何项,请您选中后再操作。', 4, 'warning');
        }
        else {
            var count = KeyValue.split(",").length;
            if (count >= 2) {
                tipDialog('很抱歉，一次只能选择一个进行操作。', 4, 'warning');
            }
            else {
                var url = "/BaseModule/BPdb_Dt/Form?KeyValue=" + KeyValue+ "&Tm=" + escape(Tm);
                openDialog(url, "Form", "编辑日历信息", 500, 300, function (iframe) {
                    top.frames[iframe].AcceptClick()
                });
            }
        }
    }
    //删除
    function btn_delete() {
        var KeyValue = GetJqGridRowValue("#gridTable", "DtId");
        if (IsDelData(KeyValue)) {
            var delparm = 'KeyValue=' + KeyValue;
            delConfig('/BaseModule/BPdb_Dt/Delete', delparm, KeyValue.split(",").length);
            //windowload();
        }
    }

   


    //导出
    function btn_derive() {
        count = $("#gridTable").getGridParam("records");
        if (count == 0) {
            tipDialog("没有要导出的信息！", 1.5, 0);
            return;
        }
        else if (count > 50000) {
            tipDialog("导出数据过大，请选择搜索条件分批导出", 1.5, 0);
            return;
        }
        else {
            SetDeriveExcel("#gridTable", "工厂日历信息" + formatDate(CurrentTime(), 'yyyyMMdd'));
            openDialog("/CommonModule/BPdb_Dt/DeriveDialog", "DeriveDialog", "工厂日历信息导出", 600, 300, function (iframe) {
                top.frames[iframe].AcceptClick();
            });
        }
    }

    // 导入
    function btn_import() {   
            openDialog("/BaseModule/BPdb_Dt/ExcelImportDialog?area_key=" + area_key, "ExcelImportDialog", "工厂日历信息导入", 750, 300, function (iframe) {
                top.frames[iframe].AcceptClick();
            });
        }
    //搜索
    function btn_Search() {
        var RsvFld1 = $("#RsvFld1").val();
        var RsvFld2 = $("#RsvFld2").val();
        var DtTyp = $("#DtTyp").val();
        
        $("#gridTable").jqGrid('setGridParam', {
            url: "@Url.Content("~/BaseModule/BPdb_Dt/GridPageByCondition")?areaId=" + area_name + "&parentId=" + parentId + "&RsvFld1=" + RsvFld1 + "&RsvFld2=" + RsvFld2 + "&DtTyp=" + DtTyp, page: 1, datatype: 'json'
    }).trigger('reloadGrid');
    }
    $(document).keypress(function (e) {
        // 回车键事件
        if (e.which == 13) {
            btn_Search();
        }
    });

    //修改后导出
    //根据检索条件搜索出来的数据直接导出
    function btn_derive() {
        var RsvFld1 = $("#RsvFld1").val();
        var RsvFld2 = $("#RsvFld2").val();
        var DtTyp = $("#DtTyp").val();

        var count = $("#gridTable").getGridParam("records");
        if (count == 0) {
            tipDialog("没有要导出的信息！", 1.5, 0);
            return;
        }
        else {
            window.setTimeout(function () {
                location.href = "/BaseModule/BPdb_Dt/GetExcel_Data?areaId=" + area_name + "&parentId=" + parentId + "&RsvFld1=" + RsvFld1 + "&RsvFld2=" + RsvFld2 + "&DtTyp=" + DtTyp;
                Loading(false);
            }, 200);
        }
    }

    //根据数据字典显示内容
    function CellItem(Code, cellvalue) {
        var value = "";
        getAjax('/CommonModule/DataDictionary/BinDingItemsJson', { Code: Code }, function (data) {
            var itemjson = eval("(" + data + ")");
            $.each(itemjson, function (i) {
                if (itemjson[i].Code == cellvalue) {
                    value = itemjson[i].FullName;
                }
            });
        })
        return value;
    }
    function CellItem_ClassType(Code) {
        var value = "";
        getAjax('/CommonModule/DataDictionary/BinDingItemsJson', { Code: Code }, function (data) {
            var itemjson = eval("(" + data + ")");
            var length = itemjson.length;
            if (length == 1) {
                ClassTypeCellItem = itemjson[0].Code + ":" + itemjson[0].FullName;
            }
            else if (length > 1) {
                for (var a = 0; a < length - 1; a++) {
                    value += itemjson[a].Code + ":" + itemjson[a].FullName + ";";
                }
                ClassTypeCellItem = value + itemjson[length - 1].Code + ":" + itemjson[length - 1].FullName;
            }
            //length=0不处理
        })
    }

</script>
<div id="layout" class="layout">
    @*树区域*@
    <div class="layoutPanel layout-west">
        <div class="btnbartitle">
            <div>
                时间索引
            </div>
        </div>
        <div class="ScrollBar" id="ItemsTree"></div>
    </div>
    <div class="layoutPanel layout-center">
        @*按钮区域*@
        <div class="tools_bar" style="margin-top: 1px; margin-bottom: 0px;">
            <div class="PartialButton">
                @Html.Partial("_PartialButton")
            </div>
        </div>
        @*搜索框区域*@
        <table border="0" class="form-find" style="height: 45px;">
            <tr>
                <th>机构名称：</th>
                <td>
                    <input id="RsvFld1" type="text" class="txt" style="width: 120px" />
                </td>

                <th>班制名称：</th>
                <td>
                    <input id="RsvFld2" type="text" class="txt" style="width: 120px" />
                </td>

                <th>日期类型：</th>
                <td>
                    <select id="DtTyp" style="width: 150px;height:25px">
                        <option value="">全部</option>
                        <option value="1">工作</option>
                        <option value="0">休息</option>
                    </select>
                </td>
                <td>
                    <input id="btnSearch" type="button" class="btnSearch" value="搜 索" onclick="btn_Search()" />
                </td>

            </tr>
        </table>
        @*</div>*@
        @*表格区域*@
        <div class="topline rightline" style="margin: 1px; margin-top: -1px;">
            <table id="gridTable" style="width:1500px"></table>
            <div id="gridPager"></div>
        </div>
    </div>
</div>
